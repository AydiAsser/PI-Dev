{% extends 'base.html.twig' %}


{% block title %}Article index
{% endblock %}

{% block stylesheets %}

	<link rel="stylesheet" href="{{asset("front/css/bootstrap.min.css")}}">
	<link rel="stylesheet" href="{{asset("front/css/owl.carousel.min.css")}}">
	<link rel="stylesheet" href="{{asset("front/css/magnific-popup.css")}}">
	<link rel="stylesheet" href="{{asset("front/css/font-awesome.min.css")}}">
	<link rel="stylesheet" href="{{asset("front/css/themify-icons.css")}}">
	<link rel="stylesheet" href="{{asset("front/css/nice-select.css")}}">
	<link rel="stylesheet" href="{{asset("front/css/flaticon.css")}}">
	<link rel="stylesheet" href="{{asset("front/css/gijgo.css")}}">
	<link rel="stylesheet" href="{{asset("front/css/animate.css")}}">
	<link rel="stylesheet" href="{{asset("front/css/slicknav.css")}}">
	<link rel="stylesheet" href="{{asset("front/css/style.css")}}">

	<link rel="stylesheet" href="{{ asset("front/css/style2.css") }}">
	<link rel="stylesheet" href="{{ asset("front/css/bootstrap2.min.css") }}">

	<link rel="preconnect" href="https://fonts.googleapis.com">
	<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
	<link
	href="https://fonts.googleapis.com/css2?family=Jost:wght@500;600&family=Roboto&display=swap" rel="stylesheet">

	<!-- Icon Font Stylesheet -->
	<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css"/>
	<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css" rel="stylesheet">

<!-- Libraries Stylesheet -->
	{# <link href="lib/owlcarousel/assets/owl.carousel.min.css" rel="stylesheet">
																																																							    <link href="lib/lightbox/css/lightbox.min.css" rel="stylesheet"> #}
{% endblock %}

{% block body %}
	<!-- Header Start -->
	<div class="bradcam_area breadcam_bg">
		<div class="container">
			<div class="row">
				<div class="col-xl-12">
					<div class="bradcam_text">
						<h3>blog</h3>
					</div>
				</div>
			</div>
		</div>
	</div>
	<!-- Header End -->

	<!-- Blog Start -->

	<div class="container" style="margin-top:100px">
		<div class="row">

			<div
				class="col-md-4">
				<!-- Form for filtering by author name -->
				<form action="{{ path('app_article_index') }}" method="get" class="mb-3">
					<div class="input-group">
						<input type="text" class="form-control" placeholder="Filter by author name" name="authorName" value="{{ authorName }}">
						<button class="btn btn-outline-secondary" type="submit">Search</button>
					</div>
				</form>
			</div>

			<div
				class="col-md-4">
				<!-- Form for filtering by title -->
				<form action="{{ path('app_article_index') }}" method="get" class="mb-3">
					<div class="input-group">
						<input type="text" class="form-control" placeholder="Filter by title" name="title" value="{{ title }}">
						<button class="btn btn-outline-secondary" type="submit">Search</button>
					</div>
				</form>
			</div>




			<div
				class="col-md-2">

				{# Display the filters and articles #}
				<form id="article-filter-form" method="GET" action="{{ path('app_article_index') }}">
					<div class="default-select" id="default-select">
						<select id="sortBySelect" name="sortBy" class="nice-select">
                            <option value="recent" {% if sortBy == 'recent' %} selected {% endif %}>Recent</option>
                            <option value="oldest" {% if sortBy == 'oldest' %} selected {% endif %}>Oldest</option>
							<option value="title" {% if sortBy == 'title' %} selected {% endif %}>A_Z</option>
							<option value="titleDesc" {% if sortBy == 'titleDesc' %} selected {% endif %}>Z_A</option>
							<option value="nb_likes" {% if sortBy == 'nb_likes' %} selected {% endif %}>Number of Likes</option>
							<option value="nb_comments" {% if sortBy == 'nb_comments' %} selected {% endif %}>Number of Comments</option>
						</select>
					</div>
				</form>

			</div>

			<div class="col-md-2">
				<a href="{{ path('app_article_index') }}" class="btn btn-secondary">Clear Filters</a>


				<script>
					document.addEventListener('DOMContentLoaded', function () { // Find the clear filters button
const clearFiltersButton = document.getElementById('clearFiltersButton');

// Attach an event listener to the button
clearFiltersButton.addEventListener('click', function () { // Find the form element
const articleFilterForm = document.getElementById('article-filter-form');

// Reset the form
articleFilterForm.reset();
});
});
				</script>

			</div>


		</div>
	</div>

</div></div><div class="container-fluid blog py-5">
<div class="container py-5">


	<div class="mx-auto text-center mb-5" style="max-width: 900px;">
		<h5 class="section-title px-3">Our Blog</h5>
		<h1 class="mb-4">Popular medical Blogs</h1>
		<p class="mb-0">Explore the latest insights, trends, and discoveries in the world of medicine. From groundbreaking research to expert opinions, our collection of medical blogs covers a wide range of topics to keep you informed and inspired.</p>
		<a style="margin-top:60px" href="{{ path('app_article_new')}}" class="genric-btn info-border radius">Add Article</a>
	</div>



	<div class="row g-4 justify-content-center" id="articles">

		{% set imageCounter = 4 %}

		{% for article in pagination %}
			<div class="col-lg-4 col-md-6">
				<div class="blog-item">
					<div class="blog-img">
						<div class="blog-img-inner">
							{% if article.picture is  null %}
								<img class="img-fluid w-100 rounded-top" src="{{ asset('front/img/blog-' ~ imageCounter ~ '.jpg') }}" alt="Image">
							{% else %}
								<img class="img-fluid w-100 rounded-top" src="{{ asset('uploads/pictures/' ~ article.picture) }}" alt="Article Image">
							{% endif %}


							<div class="blog-icon">
								<a href="{{ path('app_article_show', {'id': article.id}) }}" class="my-auto">
									<i class="fas fa-link fa-2x text-white"></i>
								</a>
							</div>
						</div>
						<div class="blog-info d-flex align-items-center border border-start-0 border-end-0">
							<small class="flex-fill text-center border-end py-2">
								<i class="fa fa-calendar-alt text-primary me-2"></i>
								{{ article.createdAt ? article.createdAt|date('Y-m-d') : '' }}
							</small>
							
							 <a class="btn-hover flex-fill text-center text-white border-end py-2 like-button" href="#" data-article-id="{{ article.id }}">
                        {% set userLiked = app.user and article.likesList is not null and app.user.getClientIp() in article.likesList %}
                        {# Apply 'pink' class if the user has already liked the article #}
                        <i class="fa fa-thumbs-up text-{{ userLiked ? 'pink' : 'primary' }} me-2"></i>
                        <span class="like-count">{{ article.nbLikes }}</span>
                    </a>

							<span class="btn-hover flex-fill text-center text-white py-2">
								<i class="fa fa-comments text-primary me-2"></i>
								{{ article.nbComments }}
							</span>
						</div>
					</div>
					<div class="blog-content border border-top-0 rounded-bottom p-4">
						<p class="mb-3">Posted By:
							{{ article.author.getFirstName() }}
							{{ article.author.getLastName() }}</p>
						<a href="{{ path('app_article_show', {'id': article.id}) }}" class="h4">{{ article.title }}</a>
						<p class="my-3">{{ article.contenu|slice(0, 20) }}
							{% if article.contenu|length > 200 %}...
							{% endif %}
						</p>
						<div style="display: flex;justify-content: space-between;align-items: center;">
							<a href="{{ path('app_article_show', {'id': article.id}) }}" class="btn btn-primary rounded-pill py-2 px-4">Read More</a>
							<form method="post" action="{{ path('app_article_delete', {'id': article.id}) }}" onsubmit="return confirm('Are you sure you want to delete this item?');" style="margin-bottom: 0;">
								<input type="hidden" name="_token" value="{{ csrf_token('delete' ~ article.id) }}">
								<button class="btn" id="delete-article-btn" style="padding: 0;">
									<i class="ti ti-trash" style="font-size: 1.5em;"></i>
								</button>
							</form>
						</div>
					</div>
				</div>
			</div>
			{% if imageCounter == 7 %}
				{% set imageCounter = 4 %}
			{% else %}
				{% set imageCounter = imageCounter + 1 %}
			{% endif %}
		{% endfor %}

	</div>

<style>
    .pagination {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top: 20px;
    }
    
    .pagination-link {
        display: inline-block;
        width: 30px; /* Adjust as needed */
        height: 30px; /* Adjust as needed */
        line-height: 30px;
        text-align: center;
        border: 1px solid #ccc;
        border-radius: 50%;
        margin: 0 5px; /* Adjust the spacing between buttons */
        text-decoration: none;
        color: #333;
    }

    .pagination-link.current {
        color: blue;
        font-weight: semi-bold;
    }

    .pagination-pill {
        display: inline-block;
        padding: 5px 10px;
        border: 1px solid #ccc;
        border-radius: 20px;
        margin: 0 5px; /* Adjust the spacing between buttons */
        text-decoration: none;
        color: #333;
    }
</style>

<div class="pagination">
    {% if pagination.currentPageNumber > 1 %}
        <a href="{{ path(app.request.attributes.get('_route'), app.request.query.all|merge({'page': pagination.currentPageNumber - 1})) }}" class="pagination-pill">Previous</a>
    {% endif %}
    
    {% for page in 1..pagination.pageCount %}
        {% if page == pagination.currentPageNumber %}
            <span class="pagination-link current">{{ page }}</span>
        {% else %}
            <a href="{{ path(app.request.attributes.get('_route'), app.request.query.all|merge({'page': page})) }}" class="pagination-link">{{ page }}</a>
        {% endif %}
    {% endfor %}
    
    {% if pagination.currentPageNumber < pagination.pageCount %}
        <a href="{{ path(app.request.attributes.get('_route'), app.request.query.all|merge({'page': pagination.currentPageNumber + 1})) }}" class="pagination-pill">Next</a>
    {% endif %}
</div>



</div>
</div>



{% block javascripts %}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>

			//********************** LIKE AND DISLIKE *******************************

document.addEventListener('DOMContentLoaded', function () {
    var likeButtons = document.querySelectorAll('.like-button');

    likeButtons.forEach(function (button) {
        button.addEventListener('click', function (event) {
            event.preventDefault();

            var articleId = button.getAttribute('data-article-id');

            fetch('/article/like/' + articleId, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                }
            }).then(response => {
                if (response.ok) {
                    return response.json();
                }
                throw new Error('Network response was not ok.');
            }).then(data => {
                var likeCountElement = button.querySelector('.like-count');
                likeCountElement.textContent = data.likes;
            }).catch(error => {
                console.error('Error:', error);
            });
        });
    });
});

			//********************** TRI *******************************

const sortBySelect = document.getElementById('sortBySelect');

// Add event listener for change event
sortBySelect.addEventListener('change', function () { // Get the selected value
const sortByValue = this.value;

// Get the current URL parameters
const urlParams = new URLSearchParams(window.location.search);
const authorName = urlParams.get('authorName');
const title = urlParams.get('title');

// Construct the URL with additional parameters
let url = '{{ path('app_article_sort') }}?sortBy=' + sortByValue;
if (authorName) {
url += '&authorName=' + authorName;
}
if (title) {
url += '&title=' + title;
}

// Send an AJAX request to the server
fetch(url).then(response => {
if (response.ok) {
return response.json(); // Parse the JSON response
}
throw new Error('Network response was not ok.');
}).then(data => { // Get the container element for articles (e.g., with id="articles")
const articlesContainer = document.getElementById('articles');

// Clear the existing articles
articlesContainer.innerHTML = '';

// Loop through the sorted articles
// Assuming "data" is an array of articles
data.forEach(article => { // Create a new div element for each article
const articleDiv = document.createElement('div');
articleDiv.classList.add('col-lg-4','col-md-6','blog-item');
// Construct the image URL using Symfony's asset function
const imageUrl = article.picture ? '/uploads/pictures/'+article.picture : '/front/img/blog/dna.png';

// Update the HTML string with the constructed image URL
articleDiv.innerHTML = `
             <div class="blog-img" data-article-id=${article.id}>
                <div class="blog-img-inner">
                  <img class="img-fluid w-100 rounded-top" style="width:110px;" src='${imageUrl}' alt="Article Image">

                    <div class="blog-icon">
                        <a href="/article/${article.id}" class="my-auto">
                            <i class="fas fa-link fa-2x text-white"></i>
                        </a>
                    </div>
                </div>
                <div class="blog-info d-flex align-items-center border border-start-0 border-end-0">
                    <small class="flex-fill text-center border-end py-2">
                        <i class="fa fa-calendar-alt text-primary me-2"></i>
                        ${article.createdAt ? article.createdAt : ''}
                    </small>
					<a style="cursor:pointer;" class="btn-hover flex-fill text-center text-white border-end py-2 like-button" data-article-id="${article.id}">
                        <i class="fa fa-thumbs-up text-primary me-2"></i>
                        <span class="like-count">${article.nbLikes}</span>
                    </a>
                    <span class="btn-hover flex-fill text-center text-white py-2">
                        <i class="fa fa-comments text-primary me-2"></i>
                        ${article.nbComments ? article.nbComments : '0'}
                    </span>
                </div>
            </div>
            <div class="blog-content border border-top-0 rounded-bottom p-4">
                <p class="mb-3">Posted By: ${article.firstName ? article.firstName + ' ' + article.lastName : ''}</p>
                <a href="#" class="h4">${article.title ? article.title : ''}</a>
                <p class="my-3">
                    ${article.content ? article.content.slice(0, 20) : ''}
                    ${article.content && article.content.length > 200 ? '...' : ''}
                </p>

                <div style="display: flex;justify-content: space-between;align-items: center;">
<div style="display: flex;justify-content: space-between;align-items: center;">
                    <a href="/article/${article.id}" class="btn btn-primary rounded-pill py-2 px-4">Read More</a>
                </div>
				<form id="deleteFormm" style="margin-left:20px;margin-bottom:20px;" method="post" action="/article/delete/${article.id}">
					<input type="hidden" id="csrf_token" name="_token" value="">
					<button class="btn" id="delete-article-btn" style="padding: 0;">
									<i class="ti ti-trash" style="font-size: 1.5em;"></i>
								</button>
				</form>
			</div>   
	    </div>`;

articlesContainer.appendChild(articleDiv)
})
}).catch(error => {
console.error('There was a problem with the fetch operation:', error);
});

});

document.addEventListener('DOMContentLoaded', function () {
    // Add event listener for the deletion button
    document.addEventListener('click', function (event) {
        if (event.target && event.target.classList.contains('delete-article-btn')) {
            event.preventDefault(); // Prevent the default form submission

            const confirmation = confirm('Are you sure you want to delete this item?');
            if (confirmation) {
                const deleteForm = event.target.closest('form'); // Find the closest form element
                const csrfToken = deleteForm.querySelector('input[name="_token"]').value;
                const deleteUrl = deleteForm.getAttribute('action');

                // Send an AJAX request to delete the article
                fetch(deleteUrl, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-TOKEN': csrfToken
                    }
                }).then(response => {
                    if (response.ok) {
                        // Remove the deleted article from the DOM
                        const articleDiv = event.target.closest('.blog-item');
                        if (articleDiv) {
                            articleDiv.remove();
                        }
                    } else {
                        // Handle the error response
                        console.error('Error deleting article');
                    }
                }).catch(error => {
                    console.error('Error deleting article:', error);
                });
            }
        }
    });
});



				</script>
				




{% endblock %}
{% endblock %}
